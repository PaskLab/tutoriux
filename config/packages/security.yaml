security:
    access_decision_manager:
        strategy: unanimous

    encoders:
        App\Entity\User:
            algorithm: argon2i
        App\Entity\TestUser:
            algorithm: argon2i



    role_hierarchy:
        ROLE_DEVELOPER:       ROLE_BACKEND_ADMIN
        ROLE_BACKEND_ADMIN:   [ROLE_BACKEND_ACCESS,ROLE_MANAGER]
        ROLE_MANAGER:         [ROLE_CONTENT_MANAGER, ROLE_CORRECTOR]
        ROLE_CONTENT_MANAGER: [ROLE_CORRECTOR, ROLE_USER]
        ROLE_CORRECTOR:       ROLE_USER
        ROLE_AUTHOR:          ROLE_USER
        ROLE_BLOGGER:         ROLE_USER

    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: username

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        secure:
            anonymous:      true
            switch_user:    { role: ROLE_DEVELOPER, parameter: _want_to_be_this_user }
            pattern:        ^/
            provider:       app_user_provider
            form_login:
                check_path:           site_login_check
                login_path:           site_login
                csrf_token_generator: security.csrf.token_manager
                use_referer:          true
            logout:
                path:                 site_logout
                target:               section_id_1
            remember_me:
                secret:      '%env(APP_SECRET)%'
                lifetime: 31536000 # 365 days in seconds
                path:     /
                domain:   ~

    access_control:
    - { path: '^/([a-z]{2}\/)?login', roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: '^/([a-z]{2}\/)?cms-admin', roles: [ROLE_BACKEND_ACCESS,IS_AUTHENTICATED_FULLY] } # No remember me
    - { path: '^/([a-z]{2}\/)?u', roles: ROLE_USER }